# Adapted from
# https://dev.to/vvo/a-rails-and-postgresql-setup-for-github-actions-ci-nc8 and
# https://github.community/t/postgres-error-could-not-connect-to-server-no-such-file-or-directory/18040/4.

name: CI

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: localhost
  RAILS_ENV: test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    # Similar to docker-compose.yml but not the same.
    services:
      postgres:
        image: postgres:12.3-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Needed because the postgres container does not provide a healthcheck.
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Ruby version specified in `.ruby-version`
        # This will use by default the .ruby-version file in your repository.
        uses: eregon/use-ruby-action@master
      - name: Install required apt packages
        run: |
          sudo apt-get -y install libpq-dev
      - name: Setup cache key and directory for gems cache
        uses: actions/cache@v2.1.6
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}
      - name: Read Node.js version to install from `.nvmrc`
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Install required Node.js version
        uses: actions/setup-node@v2.4.0
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Get Yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Yarn install
        run: yarn --frozen-lockfile
      - name: Run RSpec tests
        run: |
          bundle exec rake db:setup
          bundle exec rspec
      - name: Run `standard` for Ruby
        run: bundle exec standardrb
